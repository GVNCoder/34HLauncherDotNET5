<Window
    x:Class="Launcher.Views.StartupWindowView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Launcher.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="CurrentView"
    Title="34H Launcher"
    Width="300"
    Height="250"
    Background="{DynamicResource StartupWindowBackground}"
    DataContext="{Binding Source={StaticResource Locator}, Path=StartupWindowViewModel}"
    ResizeMode="NoResize"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoadedCommand}" CommandParameter="{Binding ElementName=CurrentView}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding ViewUnloadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock
            Grid.Row="0"
            Margin="0,0,0,-5"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            FontSize="68"
            FontWeight="SemiBold"
            Foreground="{DynamicResource StartupLogoBrush}"
            Text="34H" />
        <Border Grid.Row="1" Margin="0,35,0,0">
            <Grid HorizontalAlignment="Center">
                <TextBlock
                    FontSize="18"
                    FontWeight="Light"
                    Foreground="{DynamicResource CheckForUpdatesLabelForeground}"
                    Text="{DynamicResource startupView_CheckingForUpdatesTitleLabel}"
                    Visibility="{Binding IsCheckForUpdatesLabelVisible, Converter={StaticResource bool2VisibilityConverter}}" />
                <ProgressBar
                    Width="{DynamicResource UpdateDownloadProgressBarWidth}"
                    Height="{DynamicResource UpdateDownloadProgressBarHeight}"
                    VerticalAlignment="Top"
                    d:IsHidden="True"
                    Style="{DynamicResource UpdateDownloadProgressBarStyle}"
                    Visibility="{Binding IsProgressBarVisible, Converter={StaticResource bool2VisibilityConverter}}"
                    Value="{Binding UpdateDownloadPercentProgress}">
                    <ProgressBar.Clip>
                        <RectangleGeometry
                            RadiusX="{StaticResource CornerRadiusX}"
                            RadiusY="{StaticResource CornerRadiusY}"
                            Rect="{DynamicResource UpdateDownloadProgressBarClipRect}" />
                    </ProgressBar.Clip>
                    <!--<ProgressBar.OpacityMask>
                        <VisualBrush>
                            <VisualBrush.Visual>
                                <Rectangle
                                    Width="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar}, Path=Width}"
                                    Height="{Binding RelativeSource={RelativeSource AncestorType=ProgressBar}, Path=Height}"
                                    Fill="White"
                                    RadiusX="3"
                                    RadiusY="3" />
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </ProgressBar.OpacityMask>-->
                </ProgressBar>
            </Grid>
        </Border>
    </Grid>
</Window>
